MCQ-Exercise - 1
=================

#include<stdio.h>
int main(){
	int i = 16;
	i =! i > 15;
	printf("i = %d",i);
	return 0;
}

A. 16
B. 1
C. 0
D. Compilation Error

ANSWER: C.0
EXPLANATION: i=!i>15
             !i will give 0(false) since 16 is true
             0>15 will give false, so answer is 0


#include<stdio.h>
int main()
{
	int i = 5;
	int a = ++i + ++i;
	printf("%d",a);
	return 0;
}

A. 14
B. 13
C. 12
D. 11

ANSWER: A.14
EXPLANATION: ++i(inc value is 6 but not assigned as its post inc) + ++i(6 inc to 7 and 7 is assigned)
               then 7 is assigned for first ++i also.. so 7+7=14
             


#include<stdio.h>
int main()
{
	int i = 5;
	int a = --i + --i;
	printf("%d",a);
	return 0;
}

A. 8
B. 5
C. 7
D. 6

ANSWER: D.6
EXPLANATION: --i(5 dec to 4 but not assigned) --i(4 dec to 3 and assigned)
             then 3 assigned to first --i also.... so 3+3=6


#include<stdio.h>
int main()
{
	int i = 5;
	int a = --i - --i - --i - --i;
	printf("%d",a);
	return 0;
}

A. 2 
B. -3
C. -1
D. -4

ANSWER: B.-3
EXPLANATION: the compiler doesnt calculate four operands at once.. its done two operands at a time
  (--i - --i)- --i - --i
  (3-3)- --i - --i
  (0-2) - --i
   -2-1
   -3


#include<stdio.h>
int main()
{
	int i = 5;
	int a = --i + ++i - i-- + --i;
	printf("%d",a);
	return 0;
}

A. 7
B. 9
C. 8
D. 10

ANSWER: C.8
EXPLANATION: the compiler doesnt calculate four operands at once.. its done two operands at a time
    (--i + ++i) - i-- + --i
    (5+5)- i-- + --i
    (10-5) + --i
     5+3
     8


#include<stdio.h>
int main()
{
	int a;
	a = (1, 2, 3);
	printf("%d", a);
	return 0;
}

A. 1
B. 2
C. 3
D. Compilation Error

ANSWER: C.3
EXPLANATION: comma acts as an operator and the recent value compiled is stored(3) and the previous values are discarded(1,2)


#include<stdio.h>
int main()
{
	unsigned int num = -4;
	printf("%d", ~num);
	return 0;
}

A. 4
B. Compilation Error
C. Some Garbage Value
D. 3

ANSWER: D.3
EXPLANATION: ~n operator means -n-1
             so ~(-4) is -(-4)-1=4-1=3


#include<stdio.h>
int main()
{
	int a = 7, b = 4, c = 2;
	printf("%d\n", a|b&c);
	return 0;
}

A. 3
B. 8
C. 6
D. 7

ANSWER: D.7
EXPLANATION: 7|4&2
             & has higher order of precedence than |
             111 | (100 & 010)
             111 | 000
             111=7


#include<stdio.h>
int main()
{
	printf("%d",3 * 2--);
}

A. 3
B. 9
C. 6 
D. Compilation Error

ANSWER: D.Compilation Error

#include<stdio.h>
	#define x =
int main()
{
	int a;
	a x 5;
	printf("%d",a);
	return 0;
}

A. Compilation Error
B. Runtime Error
C. 5
D. Program incomplete

ANSWER: C.5
EXPLANATION: x is defined as = ..so a=5


#include<stdio.h>
int main()
{
 int a = 5;
 a = printf("HiHalo"), printf("World"), 9;
 printf("%d", a);
 return 0;
}

A. Compilation Error
B. HiHaloWorld6
C. HiHaloWorld9
D. 9

ANSWER: B. HiHaloWorld6
EXPLANATION: the printf statements will be executed so HiHaloWorld is printed.
             For a value, printf("HiHalo") will be assigned, which is a=6(length of HiHalo=6)
             So output is HiHaloWorld6


#include <stdio.h>
int main(void) {
    int a=3;
    a = (1, printf("Hi"),printf("world"),3);
    printf("%d",a);
    return 0;
}

A. Compilation Error
B. Hiworld3
C. 1Hiworld
D. Hiworld1

ANSWER: B. Hiworld3
EXPLANATION: a = (1, printf("Hi"),printf("world"),3) since this line is enclosed within brackets, the recent value will be assigned to a, a=3
             also the printf statements will be executed
             So output is Hiworld3


#include <stdio.h>
int main(void) {
    
    int i=0, j=0, k=2, n=0;
    n = i++ && ++j || k++;
    printf("%d %d %d %d",n,i,j,k);
    return 0;
}

A. 0 1 1 2
B. 1 1 1 3
C. 1 1 0 3
D. 1 0 1 2

ANSWER: C. 1 1 0 3
EXPLANATION: i++(0) && ++j since the first operand before && is 0, the output will be 0 and second operand doesnt get evaluated, 
             so j remains 0 and i is incremented to 1
             1 || k++(k value assigned is 2 and then incremented to 3)
             1 || 2 = 1
             so n=1, i=1, j=0, k=3
             


#include <stdio.h>
int main(void) {
    
    int i=0, j=0, k=2, n=0;
    n = ++i || ++j && k++;
    printf("%d %d %d %d",n,i,j,k);
    return 0;
}

A. 1 1 1 3
B. 1 1 0 2
C. 1 1 0 3
D. 0 1 0 2

ANSWER: B. 1 1 0 2
EXPLANATION: ++i(1) || ++j && k++
             since the first operand before || is 1, the output is 1 and the rest of the operands to the right of || are not evaluated
             so n=1,i=1,j=0,k=2


#include<stdio.h>
int main()
{
	unsigned char num = 265;
	num = num + 1;
	printf("%d", num);
	return 0;
}

A. Compilation Error 
B. 266
C. 10
D. 136

ANSWER: C.10
EXPLANATION: unsigned char range 0 to 255
             so 256 is 0 in int, 257 is 1.....
             265 is 9 in int.. so 9+1=10
